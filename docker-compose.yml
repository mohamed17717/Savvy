version: '3.8'
services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: savvy
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    networks:
      - djangonetwork

  redis:
    image: "redis:alpine"
    networks:
      - djangonetwork
  django:
    build: .
    command: sh -c "
      pipenv run python manage.py migrate --noinput &&
      pipenv run python manage.py collectstatic --noinput &&
      pipenv run gunicorn dj.wsgi:application --bind 0.0.0.0:8000"
    expose:
      - 8000
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    links:
      - db:db
      - redis:redis
    networks:
      - djangonetwork

  celery_scrapy_worker:
    build: .
    command: pipenv run celery -A dj worker -l INFO -n scrapy_worker -Q scrapy -E --concurrency=10
    env_file:
      - .env
    depends_on:
      - db
      - redis
    links:
      - db:db
      - redis:redis
    networks:
      - djangonetwork

  celery_orm_worker:
    build: .
    command: pipenv run celery -A dj worker -l INFO -n orm_worker -Q orm -E --concurrency=10
    env_file:
      - .env
    depends_on:
      - db
      - redis
    links:
      - db:db
      - redis:redis
    networks:
      - djangonetwork

  celery_email_worker:
    build: .
    command: pipenv run celery -A dj worker -l INFO -n email_worker -Q email -E --concurrency=4
    env_file:
      - .env
    depends_on:
      - db
      - redis
    links:
      - db:db
      - redis:redis
    networks:
      - djangonetwork

  celerybeat:
    build: .
    command: pipenv run celery -A dj beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
    links:
      - db:db
      - redis:redis
    networks:
      - djangonetwork

  # flower:
  #   image: mher/flower
  #   command: flower --broker=redis://redis:6379/0
  #   ports:
  #     - "5555:5555"
  #   depends_on:
  #     - redis

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

    ports:
      - "9090:9090"
    depends_on:
      - django # or any other service you want to monitor

  grafana:
    image: grafana/grafana
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

networks:
  default:
    driver: bridge
  djangonetwork:
    driver: bridge

volumes:
  grafana_data:
  prometheus_data:

